name: Build, Publish to Maven Central, Push Docker Image, Create Github Release

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Apache Maven Central
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_CENTRAL_TOKEN
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
      - name: Publish to Apache Maven Central
        run: mvn --batch-mode deploy -Prelease
        env: 
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
      - name: Set version from tag
        run: |
          VERSION=${{ github.ref_name }}
          echo "VERSION=${VERSION:1}" >> $GITHUB_ENV
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with: 
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Build and Push
        id: docker_build_push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/webdbviewer:latest,${{ secrets.DOCKER_HUB_USERNAME }}/webdbviewer:${{ env.VERSION }}
      - name: Show image digest
        run: echo ${{ steps.docker_build_push.outputs.digest }}
      - name: Create DockerCompose.zip
        run: zip DockerCompose.zip docker-compose.yml .env
      - name: Read Changelog
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        continue-on-error: true
        with:
          version: ${{ github.ref_name }}
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          body: ${{ steps.changelog_reader.outputs.changes }}
          artifacts: "target/*.war,DockerCompose.zip"
